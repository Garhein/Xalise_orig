using System;
using Xalise.Interop.HL7.Core;

namespace Xalise.Interop.HL7.Structure.Table
{
    /// <summary>
    /// 0003 - Event type.
    /// </summary>
    [Serializable]
    public class EventType : AbstractTable
    {
        public static EventType A01     = new EventType("A01", "ADT/ACK - Admit/visit notification");
        public static EventType A02     = new EventType("A02", "ADT/ACK - Transfer a patient");
        public static EventType A03     = new EventType("A03", "ADT/ACK - Discharge/end visit");
        public static EventType A04     = new EventType("A04", "ADT/ACK - Register a patient");
        public static EventType A05     = new EventType("A05", "ADT/ACK - Pre-admit a patient");
        public static EventType A06     = new EventType("A06", "ADT/ACK - Change an outpatient to an inpatient");
        public static EventType A07     = new EventType("A07", "ADT/ACK - Change an inpatient to an outpatient");
        public static EventType A08     = new EventType("A08", "ADT/ACK - Update patient information");
        public static EventType A09     = new EventType("A09", "ADT/ACK - Patient departing - tracking");
        public static EventType A10     = new EventType("A10", "ADT/ACK - Patient arriving - tracking");
        public static EventType A11     = new EventType("A11", "ADT/ACK - Cancel admit/visit notification");
        public static EventType A12     = new EventType("A12", "ADT/ACK - Cancel transfer");
        public static EventType A13     = new EventType("A13", "ADT/ACK - Cancel discharge/end visit");
        public static EventType A14     = new EventType("A14", "ADT/ACK - Pending admit");
        public static EventType A15     = new EventType("A15", "ADT/ACK - Pending transfer");
        public static EventType A16     = new EventType("A16", "ADT/ACK - Pending discharge");
        public static EventType A17     = new EventType("A17", "ADT/ACK - Swap patients");
        public static EventType A18     = new EventType("A18", "ADT/ACK - Merge patient information (for backward compatibility only)");
        public static EventType A19     = new EventType("A19", "QRY/ADR - Patient query");
        public static EventType A20     = new EventType("A20", "ADT/ACK - Bed status update");
        public static EventType A21     = new EventType("A21", "ADT/ACK - Patient goes on a “leave of absence”");
        public static EventType A22     = new EventType("A22", "ADT/ACK - Patient returns from a “leave of absence”");
        public static EventType A23     = new EventType("A23", "ADT/ACK - Delete a patient record");
        public static EventType A24     = new EventType("A24", "ADT/ACK - Link patient information");
        public static EventType A25     = new EventType("A25", "ADT/ACK - Cancel pending discharge");
        public static EventType A26     = new EventType("A26", "ADT/ACK - Cancel pending transfer");
        public static EventType A27     = new EventType("A27", "ADT/ACK - Cancel pending admit");
        public static EventType A28     = new EventType("A28", "ADT/ACK - Add person information");
        public static EventType A29     = new EventType("A29", "ADT/ACK - Delete person information");
        public static EventType A30     = new EventType("A30", "ADT/ACK - Merge person information (for backward compatibility only)");
        public static EventType A31     = new EventType("A31", "ADT/ACK - Update person information");
        public static EventType A32     = new EventType("A32", "ADT/ACK - Cancel patient arriving - tracking");
        public static EventType A33     = new EventType("A33", "ADT/ACK - Cancel patient departing - tracking");
        public static EventType A34     = new EventType("A34", "ADT/ACK - Merge patient information - patient ID only (for backward compatibility only)");
        public static EventType A35     = new EventType("A35", "ADT/ACK - Merge patient information - account number only (for backward compatibility only)");
        public static EventType A36     = new EventType("A36", "ADT/ACK - Merge patient information - patient ID and account number (for backward compatibility only)");
        public static EventType A37     = new EventType("A37", "ADT/ACK - Unlink patient information");
        public static EventType A38     = new EventType("A38", "ADT/ACK - Cancel pre-admit");
        public static EventType A39     = new EventType("A39", "ADT/ACK - Merge person - patient ID (for backward compatibility only)");
        public static EventType A40     = new EventType("A40", "ADT/ACK - Merge patient - patient identifier list");
        public static EventType A41     = new EventType("A41", "ADT/ACK - Merge account - patient account number");
        public static EventType A42     = new EventType("A42", "ADT/ACK - Merge visit - visit number");
        public static EventType A43     = new EventType("A43", "ADT/ACK - Move patient information - patient identifier list");
        public static EventType A44     = new EventType("A44", "ADT/ACK - Move account information - patient account number");
        public static EventType A45     = new EventType("A45", "ADT/ACK - Move visit information - visit number");
        public static EventType A46     = new EventType("A46", "ADT/ACK - Change patient ID (for backward compatibility only)");
        public static EventType A47     = new EventType("A47", "ADT/ACK - Change patient identifier list");
        public static EventType A48     = new EventType("A48", "ADT/ACK - Change alternate patient ID (for backward compatibility only)");
        public static EventType A49     = new EventType("A49", "ADT/ACK - Change patient account number");
        public static EventType A50     = new EventType("A50", "ADT/ACK - Change visit number");
        public static EventType A51     = new EventType("A51", "ADT/ACK - Change alternate visit ID");
        public static EventType A52     = new EventType("A52", "ADT/ACK - Cancel leave of absence for a patient");
        public static EventType A53     = new EventType("A53", "ADT/ACK - Cancel patient returns from a leave of absence");
        public static EventType A54     = new EventType("A54", "ADT/ACK - Change attending doctor");
        public static EventType A55     = new EventType("A55", "ADT/ACK - Cancel change attending doctor");
        public static EventType A60     = new EventType("A60", "ADT/ACK - Update allergy information");
        public static EventType A61     = new EventType("A61", "ADT/ACK - Change consulting doctor");
        public static EventType A62     = new EventType("A62", "ADT/ACK - Cancel change consulting doctor");
        public static EventType B01     = new EventType("B01", "PMU/ACK - Add personnel record");
        public static EventType B02     = new EventType("B02", "PMU/ACK - Update personnel record");
        public static EventType B03     = new EventType("B03", "PMU/ACK - Delete personnel re cord");
        public static EventType B04     = new EventType("B04", "PMU/ACK - Active practicing person");
        public static EventType B05     = new EventType("B05", "PMU/ACK - Deactivate practicing person");
        public static EventType B06     = new EventType("B06", "PMU/ACK - Terminate practicing person");
        public static EventType B07     = new EventType("B07", "PMU/ACK - Grant Certificate/Permission");
        public static EventType B08     = new EventType("B08", "PMU/ACK - Revoke Certificate/Permission");
        public static EventType C01     = new EventType("C01", "CRM - Register a patient on a clinical trial");
        public static EventType C02     = new EventType("C02", "CRM - Cancel a patient registration on clinical trial (for clerical mistakes only)");
        public static EventType C03     = new EventType("C03", "CRM - Correct/update registration information");
        public static EventType C04     = new EventType("C04", "CRM - Patient has gone off a clinical trial");
        public static EventType C05     = new EventType("C05", "CRM - Patient enters phase of clinical trial");
        public static EventType C06     = new EventType("C06", "CRM - Cancel patient entering a phase (clerical mistake)");
        public static EventType C07     = new EventType("C07", "CRM - Correct/update phase information");
        public static EventType C08     = new EventType("C08", "CRM - Patient has gone off phase of clinical trial");
        public static EventType C09     = new EventType("C09", "CSU - Automated time intervals for reporting, like monthly");
        public static EventType C10     = new EventType("C10", "CSU - Patient completes the clinical trial");
        public static EventType C11     = new EventType("C11", "CSU - Patient completes a phase of the clinical trial");
        public static EventType C12     = new EventType("C12", "CSU - Update/correction of patient order/result information");
        public static EventType CNQ     = new EventType("CNQ", "Cancel Query");
        public static EventType I01     = new EventType("I01", "RQI/RPI - Request for insurance information");
        public static EventType I02     = new EventType("I02", "RQI/RPL - Request/receipt of patient selection display list");
        public static EventType I03     = new EventType("I03", "RQI/RPR - Request/receipt of patient selection list");
        public static EventType I04     = new EventType("I04", "RQD/RPI - Request for patient demographic data");
        public static EventType I05     = new EventType("I05", "RQC/RCI - Request for patient clinical information");
        public static EventType I06     = new EventType("I06", "RQC/RCL - Request/receipt of clinical data listing");
        public static EventType I07     = new EventType("I07", "PIN/ACK - Unsolicited insurance information");
        public static EventType I08     = new EventType("I08", "RQA/RPA - Request for treatment authorization information");
        public static EventType I09     = new EventType("I09", "RQA/RPA - Request for modification to an authorization");
        public static EventType I10     = new EventType("I10", "RQA/RPA - Request for resubmission of an authorization");
        public static EventType I11     = new EventType("I11", "RQA/RPA - Request for cancellation of an authorization");
        public static EventType I12     = new EventType("I12", "REF/RRI - Patient referral");
        public static EventType I13     = new EventType("I13", "REF/RRI - Modify patient referral");
        public static EventType I14     = new EventType("I14", "REF/RRI - Cancel patient referral");
        public static EventType I15     = new EventType("I15", "REF/RRI - Request patient referral status");
        public static EventType J01     = new EventType("J01", "QCN/ACK - Cancel query/acknowledge message");
        public static EventType J02     = new EventType("J02", "QSX/ACK - Cancel subscription/acknowledge message");
        public static EventType K11     = new EventType("K11", "RSP - Segment pattern response in response to QBP^Q11");
        public static EventType K13     = new EventType("K13", "RTB - Tabular response in response to QBP^Q13");
        public static EventType K15     = new EventType("K15", "RDY - Display response in response to QBP^Q15");
        public static EventType K21     = new EventType("K21", "RSP - Get person demographics response");
        public static EventType K22     = new EventType("K22", "RSP - Find candidates response");
        public static EventType K23     = new EventType("K23", "RSP - Get corresponding identifiers response");
        public static EventType K24     = new EventType("K24", "RSP - Allocate identifiers response");
        public static EventType K25     = new EventType("K25", "RSP - Personnel Information by Segment Response");
        public static EventType K31     = new EventType("K31", "RSP - Dispense History");
        public static EventType M01     = new EventType("M01", "MFN/MFK - Master file not otherwise specified ( for backward compatibility only )");
        public static EventType M02     = new EventType("M02", "MFN/MFK - Master file - staff practitioner");
        public static EventType M03     = new EventType("M03", "MFN/MFK - Master file - test/observation ( for backward compatibility only )");
        public static EventType M04     = new EventType("M04", "MFN/MFK - Master files charge description");
        public static EventType M05     = new EventType("M05", "MFN/MFK - Patient location master file");
        public static EventType M06     = new EventType("M06", "MFN/MFK - Clinical study with phases and schedules master file");
        public static EventType M07     = new EventType("M07", "MFN/MFK - Clinical study without phases but with schedules master file");
        public static EventType M08     = new EventType("M08", "MFN/MFK - Test/observation (numeric) master file");
        public static EventType M09     = new EventType("M09", "MFN/MFK - Test/observation (categorical) master file");
        public static EventType M10     = new EventType("M10", "MFN/MFK - Test /observation batteries master file");
        public static EventType M11     = new EventType("M11", "MFN/MFK - Test/calculated observations master file");
        public static EventType M12     = new EventType("M12", "MFN/MFK - Master file notification message");
        public static EventType M13     = new EventType("M13", "MFN/MFK - Master file notification - general");
        public static EventType M14     = new EventType("M14", "MFN/MFK - Master file notification - site defined");
        public static EventType M15     = new EventType("M15", "MFN/MFK - Inventory item master file notification");
        public static EventType N01     = new EventType("N01", "NMQ/NMR - Application management query message");
        public static EventType N02     = new EventType("N02", "NMD/ACK - Application management data message (unsolicited)");
        public static EventType O01     = new EventType("O01", "ORM - Order message (also RDE, RDS, RGV, RAS)");
        public static EventType O02     = new EventType("O02", "ORR - Order response (also RRE, RRD, RRG, RRA)");
        public static EventType O03     = new EventType("O03", "OMD - Diet order");
        public static EventType O04     = new EventType("O04", "ORD - Diet order acknowledgment");
        public static EventType O05     = new EventType("O05", "OMS - Stock requisition order");
        public static EventType O06     = new EventType("O06", "ORS - Stock requisition acknowledgment");
        public static EventType O07     = new EventType("O07", "OMN - Non-stock requisition order");
        public static EventType O08     = new EventType("O08", "ORN - Non-stock requisition acknowledgment");
        public static EventType O09     = new EventType("O09", "OMP - Pharmacy/treatment order");
        public static EventType O10     = new EventType("O10", "ORP - Pharmacy/treatment order acknowledgment");
        public static EventType O11     = new EventType("O11", "RDE - Pharmacy/treatment encoded order");
        public static EventType O12     = new EventType("O12", "RRE - Pharmacy/treatment encoded order acknowledgment");
        public static EventType O13     = new EventType("O13", "RDS - Pharmacy/treatment dispense");
        public static EventType O14     = new EventType("O14", "RRD - Pharmacy/treatment dispense acknowledgment");
        public static EventType O15     = new EventType("O15", "RGV - Pharmacy/treatment give");
        public static EventType O16     = new EventType("O16", "RRG - Pharmacy/treatment give acknowledgment");
        public static EventType O17     = new EventType("O17", "RAS - Pharmacy/treatment administration");
        public static EventType O18     = new EventType("O18", "RRA - Pharmacy/treatment administration acknowledgment");
        public static EventType O19     = new EventType("O19", "OMG - General clinical order");
        public static EventType O20     = new EventType("O20", "ORG/ORL - General clinical order response");
        public static EventType O21     = new EventType("O21", "OML - Laboratory order");
        public static EventType O22     = new EventType("O22", "ORL - General laboratory order response message to any OML");
        public static EventType O23     = new EventType("O23", "OMI - Imaging order");
        public static EventType O24     = new EventType("O24", "ORI - Imaging order response message to any OMI");
        public static EventType O25     = new EventType("O25", "RDE - Pharmacy/treatment refill authorization request");
        public static EventType O26     = new EventType("O26", "RRE - Pharmacy/Treatment Refill Authorization Acknowledgement");
        public static EventType O27     = new EventType("O27", "OMB - Blood product order");
        public static EventType O28     = new EventType("O28", "ORB - Blood product order acknowledgment");
        public static EventType O29     = new EventType("O29", "BPS - Blood product dispense status");
        public static EventType O30     = new EventType("O30", "BRP - Blood product dispense status acknowledgment");
        public static EventType O31     = new EventType("O31", "BTS - Blood product transfusion/disposition");
        public static EventType O32     = new EventType("O32", "BRT - Blood product transfusion/disposition acknowledgment");
        public static EventType O33     = new EventType("O33", "OML - Laboratory order for multiple orders related to a single specimen");
        public static EventType O34     = new EventType("O34", "ORL - Laboratory order response message to a multiple order related to single specimen OML");
        public static EventType O35     = new EventType("O35", "OML - Laboratory order for multiple orders related to a single container of a specimen");
        public static EventType O36     = new EventType("O36", "ORL - Laboratory order response message to a single container of a specimen OML");
        public static EventType P01     = new EventType("P01", "BAR/ACK - Add patient accounts");
        public static EventType P02     = new EventType("P02", "BAR/ACK - Purge patient accounts");
        public static EventType P03     = new EventType("P03", "DFT/ACK - Post detail financial transaction");
        public static EventType P04     = new EventType("P04", "QRY/DSP - Generate bill and A/R statements");
        public static EventType P05     = new EventType("P05", "BAR/ACK - Update account");
        public static EventType P06     = new EventType("P06", "BAR/ACK - End account");
        public static EventType P07     = new EventType("P07", "PEX - Unsolicited initial individual product experience report");
        public static EventType P08     = new EventType("P08", "PEX - Unsolicited update individual product experience report");
        public static EventType P09     = new EventType("P09", "SUR - Summary product experience report");
        public static EventType P10     = new EventType("P10", "BAR/ACK -Transmit Ambulatory Payment  Classification(APC)");
        public static EventType P11     = new EventType("P11", "DFT/ACK - Post Detail Financial Transactions - New");
        public static EventType P12     = new EventType("P12", "BAR/ACK - Update Diagnosis/Procedure");
        public static EventType PC1     = new EventType("PC1", "PPR - PC/ problem add");
        public static EventType PC2     = new EventType("PC2", "PPR - PC/ problem update");
        public static EventType PC3     = new EventType("PC3", "PPR - PC/ problem delete");
        public static EventType PC4     = new EventType("PC4", "QRY - PC/ problem query");
        public static EventType PC5     = new EventType("PC5", "PRR - PC/ problem response");
        public static EventType PC6     = new EventType("PC6", "PGL - PC/ goal add");
        public static EventType PC7     = new EventType("PC7", "PGL - PC/ goal update");
        public static EventType PC8     = new EventType("PC8", "PGL - PC/ goal delete");
        public static EventType PC9     = new EventType("PC9", "QRY - PC/ goal query");
        public static EventType PCA     = new EventType("PCA", "PPV - PC/ goal response");
        public static EventType PCB     = new EventType("PCB", "PPP - PC/ pathway (problem-oriented) add");
        public static EventType PCC     = new EventType("PCC", "PPP - PC/ pathway (problem-oriented) update");
        public static EventType PCD     = new EventType("PCD", "PPP - PC/ pathway (problem-oriented) delete");
        public static EventType PCE     = new EventType("PCE", "QRY - PC/ pathway (problem-oriented) query");
        public static EventType PCF     = new EventType("PCF", "PTR - PC/ pathway (problem-oriented) query response");
        public static EventType PCG     = new EventType("PCG", "PPG - PC/ pathway (goal-oriented) add");
        public static EventType PCH     = new EventType("PCH", "PPG - PC/ pathway (goal-oriented) update");
        public static EventType PCJ     = new EventType("PCJ", "PPG - PC/ pathway (goal-oriented) delete");
        public static EventType PCK     = new EventType("PCK", "QRY - PC/ pathway (goal-oriented) query");
        public static EventType PCL     = new EventType("PCL", "PPT - PC/ pathway (goal-oriented) query response");
        public static EventType Q01     = new EventType("Q01", "QRY/DSR - Query sent for immediate response");
        public static EventType Q02     = new EventType("Q02", "QRY/QCK - Query sent for deferred response");
        public static EventType Q03     = new EventType("Q03", "DSR/ACK - Deferred response to a query");
        public static EventType Q04     = new EventType("Q04", "EQQ - Embedded query language query");
        public static EventType Q05     = new EventType("Q05", "UDM/ACK - Unsolicited display update message");
        public static EventType Q06     = new EventType("Q06", "OSQ/OSR - Query for order status");
        public static EventType Q07     = new EventType("Q07", "VQQ - Virtual table query");
        public static EventType Q08     = new EventType("Q08", "SPQ - Stored procedure request");
        public static EventType Q09     = new EventType("Q09", "RQQ - event replay query");
        public static EventType Q11     = new EventType("Q11", "QBP - Query by parameter requesting an RSP segment pattern response");
        public static EventType Q13     = new EventType("Q13", "QBP - Query by parameter requesting an  RTB - tabular response");
        public static EventType Q15     = new EventType("Q15", "QBP - Query by parameter requesting an RDY display response");
        public static EventType Q16     = new EventType("Q16", "QSB - Create subscription");
        public static EventType Q17     = new EventType("Q17", "QVR - Query for previous events");
        public static EventType Q21     = new EventType("Q21", "QBP - Get person demographics");
        public static EventType Q22     = new EventType("Q22", "QBP - Find candidates");
        public static EventType Q23     = new EventType("Q23", "QBP - Get corresponding identifiers");
        public static EventType Q24     = new EventType("Q24", "QBP - Allocate identifiers");
        public static EventType Q25     = new EventType("Q25", "QBP - Personnel Information by Segment Query");
        public static EventType Q26     = new EventType("Q26", "ROR - Pharmacy/treatment order response");
        public static EventType Q27     = new EventType("Q27", "RAR - Pharmacy/treatment administration information");
        public static EventType Q28     = new EventType("Q28", "RDR - Pharmacy/treatment dispense information");
        public static EventType Q29     = new EventType("Q29", "RER - Pharmacy/treatment encoded order information");
        public static EventType Q30     = new EventType("Q30", "RGR - Pharmacy/treatment dose information");
        public static EventType Q31     = new EventType("Q31", "QBP - Dispense History");
        public static EventType R01     = new EventType("R01", "ORU/ACK - Unsolicited transmission of an observation message");
        public static EventType R02     = new EventType("R02", "QRY - Query for results of observation");
        public static EventType R03     = new EventType("R03", "QRY/DSR Display-oriented results, query/unsol. update (for backward compatibility only) (Replaced by Q05)");
        public static EventType R04     = new EventType("R04", "ORF - Response to query; transmission of requested observation");
        public static EventType R07     = new EventType("R07", "EDR - Enhanced Display Response");
        public static EventType R08     = new EventType("R08", "TBR - Tabular Data Response");
        public static EventType R09     = new EventType("R09", "ERP - Event Replay Response");
        public static EventType R21     = new EventType("R21", "OUL - Unsolicited laboratory observation");
        public static EventType R22     = new EventType("R22", "OUL - Unsolicited Specimen Oriented Observation Message");
        public static EventType R23     = new EventType("R23", "OUL - Unsolicited Specimen Container Oriented Observation Message");
        public static EventType R24     = new EventType("R24", "OUL - Unsolicited Order Oriented Observation Message");
        public static EventType R30     = new EventType("R30", "ORU - Unsolicited Point-Of-Care Observation Message Without Existing Order - Place An Order");
        public static EventType R31     = new EventType("R31", "ORU - Unsolicited New Point-Of-Care Observation Message - Search For An Order");
        public static EventType R32     = new EventType("R32", "ORU - Unsolicited Pre-Ordered Point-Of-Care Observation");
        public static EventType ROR     = new EventType("ROR", "ROR - Pharmacy prescription order query response");
        public static EventType S01     = new EventType("S01", "SRM/SRR - Request new appointment booking");
        public static EventType S02     = new EventType("S02", "SRM/SRR - Request appointment rescheduling");
        public static EventType S03     = new EventType("S03", "SRM/SRR - Request appointment modification");
        public static EventType S04     = new EventType("S04", "SRM/SRR - Request appointment cancellation");
        public static EventType S05     = new EventType("S05", "SRM/SRR - Request appointment discontinuation");
        public static EventType S06     = new EventType("S06", "SRM/SRR - Request appointment deletion");
        public static EventType S07     = new EventType("S07", "SRM/SRR - Request addition of service/resource on appointment");
        public static EventType S08     = new EventType("S08", "SRM/SRR - Request modification of service/resource on appointment");
        public static EventType S09     = new EventType("S09", "SRM/SRR - Request cancellation of service/resource on appointment");
        public static EventType S10     = new EventType("S10", "SRM/SRR - Request discontinuation of service/resource on appointment");
        public static EventType S11     = new EventType("S11", "SRM/SRR - Request deletion of service/resource on appointment");
        public static EventType S12     = new EventType("S12", "SIU/ACK - Notification of new appointment booking");
        public static EventType S13     = new EventType("S13", "SIU/ACK - Notification of appointment rescheduling");
        public static EventType S14     = new EventType("S14", "SIU/ACK - Notification of appointment modification");
        public static EventType S15     = new EventType("S15", "SIU/ACK - Notification of appointment cancellation");
        public static EventType S16     = new EventType("S16", "SIU/ACK - Notification of appointment discontinuation");
        public static EventType S17     = new EventType("S17", "SIU/ACK - Notification of appointment deletion");
        public static EventType S18     = new EventType("S18", "SIU/ACK - Notification of addition of service/resource on appointment");
        public static EventType S19     = new EventType("S19", "SIU/ACK - Notification of modification of service/resource on appointment");
        public static EventType S20     = new EventType("S20", "SIU/ACK - Notification of cancellation of service/resource on appointment");
        public static EventType S21     = new EventType("S21", "SIU/ACK - Notification of discontinuation of service/resource on appointment");
        public static EventType S22     = new EventType("S22", "SIU/ACK - Notification of deletion of service/resource on appointment");
        public static EventType S23     = new EventType("S23", "SIU/ACK - Notification of blocked schedule time slot(s)");
        public static EventType S24     = new EventType("S24", "SIU/ACK - Notification of opened (“unblocked”) schedule time slot(s)");
        public static EventType S25     = new EventType("S25", "SQM/SQR - Schedule query message and response");
        public static EventType S26     = new EventType("S26", "SIU/ACK Notification that patient did not show up for schedule appointment");
        public static EventType T01     = new EventType("T01", "MDM/ACK - Original document notification");
        public static EventType T02     = new EventType("T02", "MDM/ACK - Original document notification and content");
        public static EventType T03     = new EventType("T03", "MDM/ACK - Document status change notification");
        public static EventType T04     = new EventType("T04", "MDM/ACK - Document status change notification and content");
        public static EventType T05     = new EventType("T05", "MDM/ACK - Document addendum notification");
        public static EventType T06     = new EventType("T06", "MDM/ACK - Document addendum notification and content");
        public static EventType T07     = new EventType("T07", "MDM/ACK - Document edit notification");
        public static EventType T08     = new EventType("T08", "MDM/ACK - Document edit notification and content");
        public static EventType T09     = new EventType("T09", "MDM/ACK - Document replacement notification");
        public static EventType T10     = new EventType("T10", "MDM/ACK - Document replacement notification and content");
        public static EventType T11     = new EventType("T11", "MDM/ACK - Document cancel notification");
        public static EventType T12     = new EventType("T12", "QRY/DOC - Document query");
        public static EventType U01     = new EventType("U01", "ESU/ACK - Automated equipment status update");
        public static EventType U02     = new EventType("U02", "ESR/ACK - Automated equipment status request");
        public static EventType U03     = new EventType("U03", "SSU/ACK - Specimen status update");
        public static EventType U04     = new EventType("U04", "SSR/ACK - specimen status request");
        public static EventType U05     = new EventType("U05", "INU/ACK  - Automated equipment inventory update");
        public static EventType U06     = new EventType("U06", "INR/ACK - Automated equipment inventory request");
        public static EventType U07     = new EventType("U07", "EAC/ACK - Automated equipment command");
        public static EventType U08     = new EventType("U08", "EAR/ACK - Automated equipment response");
        public static EventType U09     = new EventType("U09", "EAN/ACK - Automated equipment notification");
        public static EventType U10     = new EventType("U10", "TCU/ACK - Automated equipment test code settings update");
        public static EventType U11     = new EventType("U11", "TCR/ACK - Automated equipment test code settings request");
        public static EventType U12     = new EventType("U12", "LSU/ACK - Automated equipment log/service update");
        public static EventType U13     = new EventType("U13", "LSR/ACK - Automated equipment log/service request");
        public static EventType V01     = new EventType("V01", "VXQ - Query for vaccination record");
        public static EventType V02     = new EventType("V02", "VXX - Response to vaccination query returning multiple PID matches");
        public static EventType V03     = new EventType("V03", "VXR - Vaccination record response");
        public static EventType V04     = new EventType("V04", "VXU - Unsolicited vaccination record update");
        public static EventType VARIES  = new EventType("Varies", "	MFQ/MFR - Master files query (use event same as asking for e.g., M05 - location)");
        public static EventType W01     = new EventType("W01", "ORU - Waveform result, unsolicited transmission of requested information");
        public static EventType W02     = new EventType("W02", "QRF - Waveform result, response to query");

        /// <summary>
        /// Constructeur.
        /// </summary>
        /// <param name="value">Valeur de la table.</param>
        /// <param name="description">Description de la donnée.</param>
        public EventType(string value, string description) : base(value, description) { }

        /// <summary>
        /// Numéro de la table de données HL7.
        /// </summary>
        public override string TableNumber
        {
            get
            {
                return "0003";
            }
        }
    }
}
